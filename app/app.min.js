angular.module("Pelican",["ngSanitize"]),angular.module("Pelican").controller("ComposeModalController",["$scope","$rootScope","apiService","validator",function(a,b,c,d){a.isListModalOpen=!1,a.modalLists=p.lists||[],b.$on("open compose modal",function(b,c){a.isListModalOpen=!0,c.activeList&&(a.activeList=c.activeList)}),b.$on("repin post",function(b,c){a.isListModalOpen=!0,c&&(a.newPost=c)}),a.closeListModal=function(){a.isListModalOpen=!1,a.activeList=null,a.newList=null,a.newPost={},a.query=""},a.backToList=function(){a.activeList=null},a.addList=function(d){return d.title?(d.isPrivate||(d.isPrivate=!1),void c.addList(d.title,d.isPrivate).then(function(c){alertify.success("New list created!"),c.data.fromNewList=!0,a.activateList(c.data),b.$emit("new list created",c.data),a.newList=null}).catch(function(a){console.error(a),alertify.error("Could not save your new list :(")})):alertify.error("Please add a list title to create one.")},a.activateList=function(b){a.activeList=b},a.addPost=function(e){try{d.validateNewPost(a.activeList,e)}catch(a){return alertify.error(a)}if(e.link)try{e.link=d.verifyLink(e.link)}catch(a){return alertify.error(a)}c.addPost(e,a.activeList).then(function(c){c.data.owner=a.user,a.activeList.fromNewList&&(c.data.fromNewList=!0),b.$emit("new post created",c.data),a.closeListModal(),alertify.success("New post created!")}).catch(function(a){console.error(a),alertify.error("Could not save your post :(")})},a.$watch("newPost.link",function(b,e){if(b&&!a.newPost.title){try{var f=d.verifyLink(b)}catch(a){return}c.getHeader(f).then(function(b){b.data&&(a.newPost.title=b.data)}).catch(function(a){console.warn(a)})}})}]),angular.module("Pelican").controller("DiscoverController",["$scope","$rootScope","apiService","validator",function(a,b,c,d){a.init=function(){p.user&&(a.user=p.user||null),p.posts&&(a.posts=p.posts||[]),p.lists&&(a.lists=p.lists)},b.$on("new post created",function(b,c){a.posts.unshift(c)}),a.openPost=function(b){a.activePost=b,$("body").css({overflow:"hidden",marginRight:"15px"})},a.closePostModal=function(){a.activePost=null,$("body").css({overflow:"inherit",marginRight:"0"})},a.repin=function(a){b.$emit("repin post",{title:a.title,link:a.link,text:a.text},100)},a.deletePost=function(d){alertify.confirm("Are you sure you want to delete this post? This action cannot be undone.",function(){c.deletePost(d).then(function(c){b.$emit("post deleted",d),a.posts=a.posts.filter(function(a){return a._id!==d._id}),a.closePostModal(),alertify.success("The post has been deleted.")}).catch(function(a){console.error(a),alertify.error("There was a problem with deleting your post.")})})},a.turnOffEditPost=function(){a.editingPost=!1},a.turnOnEditPost=function(){return a.editingPost?a.turnOffEditPost():void(a.editingPost=!0)},a.updatePost=function(){a.updatePost=function(e){try{d.validateNewPost(!0,e)}catch(a){return alertify.error(a)}if(e.link)try{e.link=d.verifyLink(e.link)}catch(a){return alertify.error(a)}c.updatePost(e).then(function(c){a.activePost=c.data,a.editingPost=!1,b.$emit("post edited",a.activePost),a.posts=a.posts.map(function(a){return a._id===c.data._id?c.data:a}),alertify.success("Your changes were successfully saved.")}).catch(function(a){console.error(a),alertify.error("Were not able to update post :(")})}},b.$on("search for post",function(b,c){if(a.posts&&!(a.posts.length<1))for(var d=0;d<a.posts.length;d++)if(a.posts[d]._id===c.postId)return a.openPost(a.posts[d])})}]),angular.module("Pelican").controller("ExtensionController",["$scope","apiService","validator","$rootScope",function(a,b,c,d){function e(){setTimeout(function(){top.window.close()},400)}function f(){var a=window.location.href;return a=a.slice(a.indexOf("?=")),a=a.slice(2,a.length),a=a.replace(/%2F/g,"/")}function g(){var b,c,d=f(),e=d.split("peli-title");e&&e[0]&&(c=e[0]),e&&e[1]&&(b=decodeURIComponent(e[1])),a.newPost||(a.newPost={title:"",link:""}),a.newPost.title=b,a.newPost.link=c}a.init=function(b,c){return b?(b&&(a.user=b),c&&(a.modalLists=c),void g()):a.loginMessage=!0},a.hideX=!0,a.activateList=function(b){a.activeList=b},a.addList=function(c){return c.title?(c.isPrivate||(c.isPrivate=!1),void b.addList(c.title,c.isPrivate).then(function(b){a.activateList(b.data),a.newList=null,a.modalLists.unshift(b.data)}).catch(function(a){console.error(a),alertify.error("Could not save your new list :(")})):alertify.error("Please add a list title to create one.")},a.backToList=function(){a.activeList=null},a.addPost=function(d){try{c.validateNewPost(a.activeList,d)}catch(a){return alertify.error(a)}if(d.link)try{d.link=c.verifyLink(d.link)}catch(a){return alertify.error(a)}b.addPost(d,a.activeList).then(function(b){a.successMessage=!0,e()}).catch(function(a){console.error(a),alertify.error("Could not save your post :(")})}}]),angular.module("Pelican").controller("HeaderController",["$scope","$rootScope","searchService",function(a,b,c){a.search=function(a){a&&c.globalSearch(a).then(function(a){console.warn(a.data)}).catch(function(a){console.error(a),alertify.error("There was an error with your search. Sorry!")})},a.$watch("query",function(b,d){return!b&&a.suggestions?a.suggestions=[]:void(!b||b.length<3||c.autoSuggestor(b).then(function(b){a.suggestions=b}).catch(function(a){console.warn(a)}))}),a.activateSuggestion=function(a){"users"===a.type?window.location.href="/user/"+a._id:"lists"===a.type?window.location.href="/list/"+a._id+"/"+a.owner:window.location.href="/user/"+a.owner+"?post="+a._id}}]),angular.module("Pelican").controller("ListsController",["$scope","apiService","validator","$rootScope","$timeout",function(a,b,c,d,e){a.init=function(){if(p.user&&(a.user=p.user),p.owner&&(a.owner=p.owner),p.owner&&p.ownerLists?a.lists=p.ownerLists:p.lists&&(a.lists=p.lists),!p.lists||p.lists.length<1)return a.deactivateWelcome=!1;for(var b=0;b<p.lists.length;b++)if(p.lists[b].posts&&p.lists[b].posts.length)return a.deactivateWelcome=!0},a.openPost=function(b,c,d){a.activePost=b,a.activePost.postIndex=c,a.activePost.listIndex=d,$("body").css({overflow:"hidden",marginRight:"15px"})},a.closePostModal=function(){a.activePost=null,a.editingPost=!1,$("body").css({overflow:"inherit",marginRight:"0"})},a.repin=function(a){d.$emit("repin post",{text:a.text,link:a.link,title:a.title})},a.toggleListLock=function(a){var c="You are about to make this lists private. Are you sure you want to proceed?";a.isPrivate&&(c="You are about to make this list public. Are you sure you want to proceed?"),alertify.confirm(c,function(){b.toggleListPrivate(a).then(function(b){a.isPrivate=!a.isPrivate,d.$emit("list privacy toggled",a)}).catch(function(a){console.error(a),alertify.error("There was a problem with changing your list settings.")})},function(){})},a.deleteList=function(c,e){alertify.confirm("Are you sure you want to delete this list? This action cannot be undone.",function(){b.deleteList(c).then(function(b){alertify.success("Your list was successfully deleted."),d.$emit("list deleted",{list:c,listIndex:e}),a.lists.splice(e,1)}).catch(function(a){console.error(a),alertify.error("There was an error deleting your list.")})})},a.openListSettings=function(a){a.isOpenSettings=!0},a.closeListSettings=function(a,b){return a?a.isOpenSettings=!1:void d.$emit("close list settings")},a.openRenameListModal=function(b){a.activeList=angular.copy(b),a.isEditListModalOpen=!0,e(function(){$("#edit-list-name-input").focus()}),a.closeListSettings(null,!0)},d.$on("close editListModal",function(){a.isEditListModalOpen=!1,a.activeList=null}),d.$on("list name updated",function(b,c){a.lists=a.lists.map(function(a){return a._id==c._id&&(a.title=c.title),a})}),a.turnOffEditPost=function(){a.editingPost=!1},a.turnOnEditPost=function(b){return a.editingPost?a.turnOffEditPost():(a.editablePost=angular.copy(a.activePost),a.editablePostIndex=b,a.editingPost=!0,void e(function(){$("#post-title-edit").focus()}))},a.deletePost=function(c){alertify.confirm("Are you sure you want to delete this post? This action cannot be undone.",function(){b.deletePost(c).then(function(b){d.$emit("post deleted",c),a.lists=a.lists.map(function(a){return a._id===c.parentList&&(a.posts=a.posts.filter(function(a){return a._id!=c._id})),a}),a.closePostModal(),alertify.success("The post has been deleted.")}).catch(function(a){console.error(a),alertify.error("There was a problem with deleting your post.")})})},a.updatePost=function(e){try{c.validateNewPost(!0,e)}catch(a){return alertify.error(a)}if(e.link)try{e.link=c.verifyLink(e.link)}catch(a){return alertify.error(a)}b.updatePost(e).then(function(b){a.activePost=b.data,a.editingPost=!1,d.$emit("post edited",a.activePost),a.lists[a.activePost.listIndex].posts[a.activePost.postIndex]=b.data,alertify.success("Your changes were successfully saved.")}).catch(function(a){console.error(a),alertify.error("Were not able to update post :(")})},a.openComposeModal=function(b){var c={user:a.user,lists:a.lists,focusId:"#search-list"};b&&(c.activeList=b),d.$emit("open compose modal",c)},d.$on("new post created",function(b,c){a.deactivateWelcome||(a.deactivateWelcome=!0),c.fromNewList||(a.lists=a.lists.map(function(a){return a._id===c.parentList&&a.posts.unshift(c),a}))}),d.$on("new list created",function(b,c){a.lists.push(c)}),d.$on("open post modal",function(b,c){a.openPost(c.post,c.postIndex,c.listIndex)}),d.$on("search for post",function(b,c){var d={};a.lists.forEach(function(a,b){a.posts.forEach(function(a,e){a._id===c.postId&&(d.post=a,d.postIndex=e,d.listIndex=b)})}),d.post&&a.openPost(d.post,d.postIndex,d.listIndex)})}]),angular.module("Pelican").controller("MenuController",["$scope","$sce","$rootScope",function(a,b,c){a.init=function(){p.user&&(a.user=p.user),p.lists&&(a.lists=p.lists),p.owner&&(a.owner=p.owner),p.ownerLists&&(a.ownerLists=p.ownerLists)},a.makeActive=function(b,c){if(c)a.ownerLists=a.ownerLists.map(function(a){return a.displayPosts=!1,a});else{if(a.owner&&a.owner.id!==$scoe.user._id)return;if(window.location.href.indexOf("/discover")>-1)return;a.lists=a.lists.map(function(a){return a.displayPosts=!1,a})}b.displayPosts=!0},a.sanitizeHtml=function(a){return b.trustAsHtml(a)},a.openPostMenu=function(a,b,d){a.title=a.title.replace(/<\/?span[^>]*>/g,""),c.$emit("open post modal",{post:a,postIndex:b,listIndex:d})},c.$on("post edited",function(b,c){a.lists[c.listIndex].posts[c.postIndex]=c}),c.$on("list deleted",function(b,c){a.lists.splice(c.listIndex,1)}),c.$on("new list created",function(b,c){a.lists.push(c)}),c.$on("list name updated",function(b,c){a.lists=a.lists.map(function(a){return a._id==c._id&&(a.title=c.title),a})}),c.$on("list privacy toggled",function(b,c){a.lists=a.lists.map(function(a){return a._id===c._id?c:a})}),c.$on("post deleted",function(b,c){a.lists=a.lists.map(function(a){return a._id===c.parentList&&(a.posts=a.posts.filter(function(a){return a._id!==c._id})),a})}),c.$on("new post created",function(b,c){a.lists=a.lists.map(function(a){return a._id===c.parentList&&a.posts.unshift(c),a})})}]),angular.module("Pelican").controller("RenameListController",["$scope","$rootScope","apiService",function(a,b,c){a.closeEditListModal=function(){b.$emit("close editListModal")},a.renameList=function(d){c.renameList(d).then(function(c){alertify.success("Successfully renamed your list."),b.$emit("list name updated",d),a.closeEditListModal()}).catch(function(a){console.error(a),alertify.error("There was a problem renaming your list.")})}}]),angular.module("Pelican").factory("apiService",["$http",function(a){var b={};return b.addList=function(b,c){return a.post("/api/list",{title:b,isPrivate:c})},b.addPost=function(b,c){var d=b;return d.parentList=c._id,c.isPrivate?d.isPrivate=!0:d.isPrivate=!1,a.post("/api/post",d)},b.updatePost=function(b){return a.put("/api/post/"+b._id,b)},b.deletePost=function(b){return a.delete("/api/post/"+b.parentList+"/"+b._id)},b.deleteList=function(b){return a.delete("/api/list/"+b._id)},b.renameList=function(b){return a.put("/api/list/rename/"+b._id,b)},b.toggleListPrivate=function(b){return a.put("/api/list/privacy/"+b._id,{newStatus:!b.isPrivate})},b.getHeader=function(b){return a.post("/api/site-header",{uri:b})},b.globalSearch=function(b){return b=encodeURIComponent(b),a.get("/api/global-search/"+b)},b}]),angular.module("Pelican").factory("searchService",["$http","$q",function(a,b){var c={};return c.globalSearch=function(b){return b=encodeURIComponent(b),a.get("/api/global-search/"+b)},c.autoSuggestor=function(a){var d=b.defer();return c.globalSearch(a).then(function(a){var b=[];for(var e in a.data)a.data[e].forEach(function(a){if(a){var d=c.parseSearchData(a,e);b.push(d)}});d.resolve(b)}).catch(function(a){d.reject(a)}),d.promise},c.parseSearchData=function(a,b){if(!b)return console.error("Needs type"),{};var c={type:b,_id:a._id};return"users"===b?(c.image=a.image,c.text=a.displayName,c.email=a.email):"lists"===b?(c.text=a.title,c.owner=a.owner):(c.text=a.title,c.link=a.link,c.subInfo=a.text,c.owner=a.owner),c},c}]),angular.module("Pelican").factory("validator",[function(){var a={};return a.validateNewPost=function(a,b){if(!a)throw"Please choose a list before trying to save a new post.";if(!b||!b.title)throw"Please add a name to your post"},a.verifyLink=function(a){a.indexOf("http")<0&&(a="http://"+a);var b=new RegExp(/[-a-zA-Z0-9@:%_\+.~#?&\/\/=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)?/gi),c=a.match(b);if(!c)throw"Please enter a valid URL.";return a},a}]),angular.module("Pelican").directive("sendTo",[function(){return{restrict:"A",link:function(a,b,c){b.bind("click",function(a){c.sendTo&&(window.location=c.sendTo)})}}}]).directive("udpateUrl",[function(){return{restrict:"A",link:function(a,b,c){b.bind("click",function(a){return console.log("Altering history disabled for now")})}}}]).directive("identifyLocation",["$timeout",function(a){return{restrict:"A",link:function(b,c,d){d.identifyLocation&&window.location.href.indexOf(d.identifyLocation)>-1&&(c.addClass("active"),b.list&&(b.list.displayPosts=!0),a(function(){if(d.id){var a="#"+d.id.split("menu-")[1],b=$(a);b.length&&($(".list").removeClass("active-list"),b.addClass("active-list"),$("html, body").animate({scrollTop:b.offset().top-60},500))}}))}}}]).directive("menuHelper",["$rootScope",function(a){return{restrict:"A",link:function(a,b,c){var d="#"+c.id.split("menu-")[1];b.bind("click",function(c){var e=$(d);return e.length?void(c.target.className.indexOf("post-title")>-1||c.target.className.indexOf("post")>-1||($(".menu-list").removeClass("active"),b.addClass("active"),$(".list").removeClass("active-list"),e.addClass("active-list"),$("html, body").animate({scrollTop:e.offset().top-60},500))):window.location.href="/list/"+a.list._id+"/"+a.user._id})}}}]).directive("focusId",["$rootScope","$timeout",function(a,b){return{restrict:"A",link:function(c,d,e){a.$on("open compose modal",function(a,d){b(function(){return!c.lists||c.lists.length<1?$("#create-list-name").focus():void $(d.focusId).focus()})})}}}]).directive("looseFocus",["$rootScope",function(a){return{restrict:"A",link:function(a,b,c){$(document).mouseup(function(c){var d=$(b);a.list.isOpenSettings&&!d.is(c.target)&&(a.closeListSettings(a.list),a.$digest())})}}}]).directive("createList",[function(){return{restrict:"A",link:function(a,b,c){$(b).keyup(function(c){13==c.keyCode&&("search-list"===b[0].id?alertify.confirm(a.query+" list does not exist yet, do you want to create it now? It would be a public list.",function(){a.addList({title:a.query})}):a.addList(a.newList))})}}}]).directive("escapeSearch",[function(){return{restrict:"A",link:function(a,b,c){$(document).keyup(function(b){27==b.keyCode&&(a.query="",a.$digest())})}}}]).directive("searchPost",[function(){return{restrict:"A",link:function(a,b,c){b.bind("click",function(b){if(a.post&&a.post._id){var c=window.location.origin+window.location.pathname+"?post="+a.post._id;window.history.pushState({path:c},"",c)}})}}}]).directive("resetLocation",[function(){return{restrict:"A",link:function(a,b,c){b.bind("click",function(a){var b=window.location.origin+window.location.pathname;window.history.pushState({path:b},"",b)})}}}]).directive("shouldOpenPost",["$rootScope","$timeout",function(a,b){return{restrict:"A",link:function(c,d,e){if(window.location.search&&window.location.search.indexOf("?=post")){var f=window.location.search.slice(6,window.location.search.length);b(function(){a.$emit("search for post",{postId:f})})}}}}]).directive("resizable",[function(){return{restrict:"A",link:function(a,b,c){var d=.8*$(".menu").height();$("#small-menu").resizable({handles:"n",maxHeight:d,minHeight:250})}}}]);