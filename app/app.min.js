angular.module("Pelican",["ngSanitize"]),angular.module("Pelican").controller("BannerController",["$scope","apiService","validator","$rootScope",function(a,b,c,d){a.init=function(b,c){b&&(a.user=b),c&&(a.lists=c)},a.openComposeModal=function(){d.$emit("open compose modal",{user:a.user,lists:a.lists,focusId:"#search-list"})}}]),angular.module("Pelican").controller("ComposeModalController",["$scope","$rootScope","apiService","validator",function(a,b,c,d){a.isListModalOpen=!1,b.$on("open compose modal",function(b,c){a.isListModalOpen=!0}),a.closeListModal=function(){a.isListModalOpen=!1,a.activeList=null,a.listTitle="",a.newPost={},a.query=""},a.backToList=function(){a.activeList=null},a.addList=function(d){return d?void c.addList(d).then(function(c){alertify.success("New list created!"),c.data.fromNewList=!0,a.activateList(c.data),b.$emit("new list created",c.data)}).catch(function(a){console.error(a),alertify.error("Could not save your new list :(")}):alertify.error("Please add a list title to create one.")},a.activateList=function(b){a.activeList=b},a.addPost=function(e){try{d.validateNewPost(a.activeList,e)}catch(a){return alertify.error(a)}if(e.link)try{e.link=d.verifyLink(e.link)}catch(a){return alertify.error(a)}c.addPost(e,a.activeList).then(function(c){c.data.owner=a.user,a.activeList.fromNewList&&(c.data.fromNewList=!0),b.$emit("new post created",c.data),a.closeListModal(),alertify.success("New post created!")}).catch(function(a){console.error(a),alertify.error("Could not save your post :(")})},a.$watch("newPost.link",function(b,e){if(b&&!a.newPost.title){try{var f=d.verifyLink(b)}catch(a){return}c.getHeader(f).then(function(b){b.data&&(a.newPost.title=b.data)}).catch(function(a){console.warn(a)})}})}]),angular.module("Pelican").controller("HomeController",["$scope","$rootScope",function(a,b){a.init=function(b,c){a.user=b||null,a.posts=c||[]},b.$on("new post created",function(b,c){a.posts.unshift(c)}),a.openPost=function(b){a.activePost=b,$("body").css({overflow:"hidden",marginRight:"15px"})},a.closePostModal=function(){a.activePost=null,$("body").css({overflow:"inherit",marginRight:"0"})}}]),angular.module("Pelican").controller("ListsController",["$scope","apiService","validator","$rootScope","$timeout",function(a,b,c,d,e){a.init=function(b,c,d){if(b&&(a.user=b),c&&(a.lists=c),d&&(a.owner=d),!c||c.length<1)return a.deactivateWelcome=!1;for(var e=0;e<c.length;e++)if(c[e].posts&&c[e].posts.length)return a.deactivateWelcome=!0},a.openPost=function(b,c,d){a.activePost=b,a.activePost.postIndex=c,a.activePost.listIndex=d,$("body").css({overflow:"hidden",marginRight:"15px"})},a.closePostModal=function(){a.activePost=null,a.editingPost=!1,$("body").css({overflow:"inherit",marginRight:"0"})},a.toggleListLock=function(a){var c="You are about to make this lists private. Are you sure you want to proceed?";a.isPrivate&&(c="You are about to make this list public. Are you sure you want to proceed?"),alertify.confirm(c,function(){b.toggleListPrivate(a).then(function(b){a.isPrivate=!a.isPrivate,d.$emit("list privacy toggled",a)}).catch(function(a){console.error(a),alertify.error("There was a problem with changing your list settings.")})},function(){})},a.deleteList=function(c,e){alertify.confirm("Are you sure you want to delete this list? This action cannot be undone.",function(){b.deleteList(c).then(function(b){alertify.success("Your list was successfully deleted."),d.$emit("list deleted",{list:c,listIndex:e}),a.lists.splice(e,1)}).catch(function(a){console.error(a),alertify.error("There was an error deleting your list.")})})},a.openListSettings=function(a){a.isOpenSettings=!0},a.closeListSettings=function(a,b){return a?a.isOpenSettings=!1:void d.$emit("close list settings")},a.openRenameListModal=function(b){a.activeList=angular.copy(b),a.isEditListModalOpen=!0,e(function(){$("#edit-list-name-input").focus()}),a.closeListSettings(null,!0)},d.$on("close editListModal",function(){a.isEditListModalOpen=!1,a.activeList=null}),d.$on("list name updated",function(b,c){a.lists=a.lists.map(function(a){return a._id==c._id&&(a.title=c.title),a})}),a.turnOffEditPost=function(){a.editingPost=!1},a.turnOnEditPost=function(b){return a.editingPost?a.turnOffEditPost():(a.editablePost=angular.copy(a.activePost),a.editablePostIndex=b,a.editingPost=!0,void e(function(){$("#post-title-edit").focus()}))},a.deletePost=function(c){alertify.confirm("Are you sure you want to delete this post? This action cannot be undone.",function(){b.deletePost(c).then(function(b){d.$emit("post deleted",c),a.lists=a.lists.map(function(a){return a._id===c.parentList&&(a.posts=a.posts.filter(function(a){return a._id!=c._id})),a}),a.closePostModal(),alertify.success("The post has been deleted.")}).catch(function(a){console.error(a),alertify.error("There was a problem with deleting your post.")})})},a.updatePost=function(e){try{c.validateNewPost(!0,e)}catch(a){return alertify.error(a)}if(e.link)try{e.link=c.verifyLink(e.link)}catch(a){return alertify.error(a)}b.updatePost(e).then(function(b){a.activePost=b.data,a.editingPost=!1,d.$emit("post edited",a.activePost),a.lists[a.activePost.listIndex].posts[a.activePost.postIndex]=b.data,alertify.success("Your changes were successfully saved.")}).catch(function(a){console.error(a),alertify.error("Were not able to update post :(")})},a.openComposeModal=function(){d.$emit("open compose modal",{user:a.user,lists:a.lists,focusId:"#search-list"})},d.$on("new post created",function(b,c){c.fromNewList||(a.lists=a.lists.map(function(a){return a._id===c.parentList&&a.posts.unshift(c),a}),a.deactivateWelcome||(a.deactivateWelcome=!0))}),d.$on("new list created",function(b,c){a.lists.push(c)}),d.$on("open post modal",function(b,c){a.openPost(c.post,c.postIndex,c.listIndex)})}]),angular.module("Pelican").controller("MenuController",["$scope","$sce","$rootScope",function(a,b,c){a.init=function(b,c){a.user=b,a.lists=c},a.makeActive=function(b){a.lists=a.lists.map(function(a){return a.displayPosts=!1,a}),b.displayPosts=!0},a.sanitizeHtml=function(a){return b.trustAsHtml(a)},a.openPostMenu=function(a,b,d){a.title=a.title.replace(/<\/?span[^>]*>/g,""),c.$emit("open post modal",{post:a,postIndex:b,listIndex:d})},c.$on("post edited",function(b,c){a.lists[c.listIndex].posts[c.postIndex]=c}),c.$on("list deleted",function(b,c){a.lists.splice(c.listIndex,1)}),c.$on("new list created",function(b,c){a.lists.push(c)}),c.$on("list name updated",function(b,c){a.lists=a.lists.map(function(a){return a._id==c._id&&(a.title=c.title),a})}),c.$on("list privacy toggled",function(b,c){a.lists=a.lists.map(function(a){return a._id===c._id?c:a})}),c.$on("post deleted",function(b,c){a.lists=a.lists.map(function(a){return a._id===c.parentList&&(a.posts=a.posts.filter(function(a){return a._id!==c._id})),a})}),c.$on("new post created",function(b,c){a.lists=a.lists.map(function(a){return a._id===c.parentList&&a.posts.unshift(c),a})})}]),angular.module("Pelican").controller("RenameListController",["$scope","$rootScope","apiService",function(a,b,c){a.closeEditListModal=function(){b.$emit("close editListModal")},a.renameList=function(d){c.renameList(d).then(function(c){alertify.success("Successfully renamed your list."),b.$emit("list name updated",d),a.closeEditListModal()}).catch(function(a){console.error(a),alertify.error("There was a problem renaming your list.")})}}]),angular.module("Pelican").factory("apiService",["$http",function(a){var b={};return b.addList=function(b){return a.post("/api/list",{title:b})},b.addPost=function(b,c){var d=b;return d.parentList=c._id,a.post("/api/post",d)},b.updatePost=function(b){return a.put("/api/post/"+b._id,b)},b.deletePost=function(b){return a.delete("/api/post/"+b.parentList+"/"+b._id)},b.deleteList=function(b){return a.delete("/api/list/"+b._id)},b.renameList=function(b){return a.put("/api/list/rename/"+b._id,b)},b.toggleListPrivate=function(b){return a.put("/api/list/privacy/"+b._id,{newStatus:!b.isPrivate})},b.getHeader=function(b){return a.post("/api/site-header",{uri:b})},b}]),angular.module("Pelican").factory("validator",[function(){var a={};return a.validateNewPost=function(a,b){if(!a)throw"Please choose a list before trying to save a new post.";if(!b||!b.title)throw"Please add a name to your post"},a.verifyLink=function(a){a.indexOf("http")<0&&(a="http://"+a);var b=new RegExp(/[-a-zA-Z0-9@:%_\+.~#?&\/\/=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)?/gi),c=a.match(b);if(!c)throw"Please enter a valid URL.";return a},a}]),angular.module("Pelican").directive("sendTo",[function(){return{restrict:"A",link:function(a,b,c){b.bind("click",function(a){c.sendTo&&(window.location=c.sendTo)})}}}]).directive("menuHelper",[function(){return{restrict:"A",link:function(a,b,c){var d="#"+c.id.split("menu-")[1];b.bind("click",function(a){a.target.className.indexOf("post-title")>-1||a.target.className.indexOf("post")>-1||($(".menu-list").removeClass("active"),b.addClass("active"),$(".list").removeClass("active-list"),$(d).addClass("active-list"),$("html, body").animate({scrollTop:$(d).offset().top-60},500))})}}}]).directive("focusId",["$rootScope","$timeout",function(a,b){return{restrict:"A",link:function(c,d,e){a.$on("open compose modal",function(a,c){b(function(){$(c.focusId).focus()})})}}}]).directive("looseFocus",["$rootScope",function(a){return{restrict:"A",link:function(a,b,c){$(document).mouseup(function(c){var d=$(b);a.list.isOpenSettings&&!d.is(c.target)&&(a.closeListSettings(a.list),a.$digest())})}}}]).directive("createList",[function(){return{restrict:"A",link:function(a,b,c){$(b).keyup(function(b){13==b.keyCode&&a.addList(a.listTitle)})}}}]).directive("escapeSearch",[function(){return{restrict:"A",link:function(a,b,c){$(document).keyup(function(b){27==b.keyCode&&(a.query="",a.$digest())})}}}]);