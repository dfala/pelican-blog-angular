angular.module("Pelican",["ngSanitize"]),angular.module("Pelican").controller("BannerController",["$scope","apiService","validator","$rootScope",function(a,b,c,d){a.init=function(b,c){b&&(a.user=b),c&&(a.lists=c)},a.openComposeModal=function(){d.$emit("open compose modal",{user:a.user,lists:a.lists})}}]),angular.module("Pelican").controller("ComposeModalController",["$scope","$rootScope","apiService","validator",function(a,b,c,d){a.isListModalOpen=!1,b.$on("open compose modal",function(b,c){a.isListModalOpen=!0}),a.closeListModal=function(){a.isListModalOpen=!1,a.activeList=null,a.listTitle="",a.newPost={}},a.addList=function(d){return d?void c.addList(d).then(function(c){alertify.success("New list created!"),c.data.fromNewList=!0,a.activateList(c.data),b.$emit("new list created",c.data)}).catch(function(a){console.error(a),alertify.error("Could not save your new list :(")}):alertify.error("Please add a list title to create one.")},a.activateList=function(b){a.activeList=b},a.addPost=function(e){try{d.validateNewPost(a.activeList,e)}catch(a){return alertify.error(a)}if(e.link)try{e.link=d.verifyLink(e.link)}catch(a){return alertify.error(a)}c.addPost(e,a.activeList).then(function(c){c.data.owner=a.user,a.activeList.fromNewList&&(c.data.fromNewList=!0),b.$emit("new post created",c.data),a.closeListModal(),alertify.success("New post created!")}).catch(function(a){console.error(a),alertify.error("Could not save your post :(")})}}]),angular.module("Pelican").controller("HomeController",["$scope","$rootScope",function(a,b){a.init=function(b,c){a.user=b||null,a.posts=c||[]},b.$on("new post created",function(b,c){a.posts.unshift(c)}),a.openPost=function(b){a.activePost=b},a.closePostModal=function(){a.activePost=null}}]),angular.module("Pelican").controller("ListsController",["$scope","apiService","validator","$rootScope",function(a,b,c,d){a.init=function(b,c){b&&(a.user=b),c&&(a.lists=c)},a.openPost=function(b,c,d){a.activePost=b,a.activePost.postIndex=c,a.activePost.listIndex=d},a.closePostModal=function(){a.activePost=null,a.editingPost=!1},a.toggleListLock=function(a){var c="You are about to make this lists private. Are you sure you want to proceed?";a.isPrivate&&(c="You are about to make this list public. Are you sure you want to proceed?"),alertify.confirm(c,function(){b.toggleListPrivate(a).then(function(b){a.isPrivate=!a.isPrivate,d.$emit("list privacy toggled",a)}).catch(function(a){console.error(a),alertify.error("There was a problem with changing your list settings.")})},function(){})},a.turnOffEditPost=function(){a.editingPost=!1},a.turnOnEditPost=function(){a.editablePost=angular.copy(a.activePost),a.editingPost=!0},a.deletePost=function(c){alertify.confirm("Are you sure you want to delete this post? This action cannot be undone.",function(){b.deletePost(c).then(function(b){d.$emit("post deleted",c),a.lists=a.lists.map(function(a){return a._id===c.parentList&&(a.posts=a.posts.filter(function(a){return a._id!=c._id})),a}),a.closePostModal(),alertify.success("The post has been deleted.")}).catch(function(a){console.error(a),alertify.error("There was a problem with deleting your post.")})})},a.updatePost=function(e){try{c.validateNewPost(!0,e)}catch(a){return alertify.error(a)}if(e.link)try{e.link=c.verifyLink(e.link)}catch(a){return alertify.error(a)}b.updatePost(e).then(function(b){a.activePost=b.data,a.editingPost=!1,d.$emit("post edited",a.activePost),a.lists[a.activePost.listIndex].posts[a.activePost.postIndex]=b.data,alertify.success("Your changes were successfully saved.")}).catch(function(a){console.error(a),alertify.error("Were not able to update post :(")})},a.openComposeModal=function(){d.$emit("open compose modal",{user:a.user,lists:a.lists})},d.$on("new post created",function(b,c){c.fromNewList||(a.lists=a.lists.map(function(a){return a._id===c.parentList&&a.posts.unshift(c),a}))}),d.$on("new list created",function(b,c){a.lists.push(c)})}]),angular.module("Pelican").controller("MenuController",["$scope","$sce","$rootScope",function(a,b,c){a.init=function(b,c){a.user=b,a.lists=c},a.makeActive=function(b){a.lists=a.lists.map(function(a){return a.displayPosts=!1,a}),b.displayPosts=!0},a.sanitizeHtml=function(a){return b.trustAsHtml(a)},c.$on("post edited",function(b,c){a.lists[c.listIndex].posts[c.postIndex]=c}),c.$on("new list created",function(b,c){a.lists.push(c)}),c.$on("list privacy toggled",function(b,c){a.lists=a.lists.map(function(a){return a._id===c._id?c:a})}),c.$on("post deleted",function(b,c){a.lists=a.lists.map(function(a){return a._id===c.parentList&&(a.posts=a.posts.filter(function(a){return a._id!==c._id})),a})}),c.$on("new post created",function(b,c){a.lists=a.lists.map(function(a){return a._id===c.parentList&&a.posts.unshift(c),a})})}]),angular.module("Pelican").factory("apiService",["$http",function(a){var b={};return b.addList=function(b){return a.post("/api/list",{title:b})},b.addPost=function(b,c){var d=b;return d.parentList=c._id,a.post("/api/post",d)},b.updatePost=function(b){return a.put("/api/post/"+b._id,b)},b.deletePost=function(b){return a.delete("/api/post/"+b.parentList+"/"+b._id)},b.toggleListPrivate=function(b){return a.put("/api/list/privacy/"+b._id,{newStatus:!b.isPrivate})},b}]),angular.module("Pelican").factory("validator",[function(){var a={};return a.validateNewPost=function(a,b){if(!a)throw"Please choose a list before trying to save a new post.";if(!b||!b.title)throw"Please add a name to your post"},a.verifyLink=function(a){a.indexOf("http")<0&&(a="http://"+a);var b=new RegExp(/[-a-zA-Z0-9@:%_\+.~#?&\/\/=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)?/gi),c=a.match(b);if(!c)throw"Please enter a valid URL.";return a},a}]),angular.module("Pelican").directive("sendTo",[function(){return{restrict:"A",link:function(a,b,c){b.bind("click",function(a){c.sendTo&&(window.location=c.sendTo)})}}}]).directive("menuHelper",[function(){return{restrict:"A",link:function(a,b,c){var d="#"+c.id.split("menu-")[1];b.bind("click",function(a){$(".menu-list").removeClass("active"),b.addClass("active"),$(".list").removeClass("active-list"),$(d).addClass("active-list"),$("html, body").animate({scrollTop:$(d).offset().top-20},500)})}}}]).directive("escapeSearch",[function(){return{restrict:"A",link:function(a,b,c){$(document).keyup(function(b){27==b.keyCode&&(a.query="",a.$digest())})}}}]);